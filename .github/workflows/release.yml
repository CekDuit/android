name: Release APK
on:
    push:
      branches:
        - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}

        run: |
            echo $ENCODED_STRING > keystore-base64.txt
            base64 -d keystore-base64.txt > keystore.jks

      - name: Get Version
        id: get_version
        run: |
          echo "Extracting versionName..."
          VERSION_NAME=$(grep 'versionName =' app/build.gradle | sed -n 's/.*versionName = "\(.*\)"/\1/p')
          if [ -z "$VERSION_NAME" ]; then
            echo "Error: versionName not found or invalid format"
            exit 1
          fi
          echo "Extracted VERSION_NAME=$VERSION_NAME"
          echo "VERSION=$VERSION_NAME" >> $GITHUB_ENV

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Build Release APK
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.SECRET_GITHUB_TOKEN }}
          files: ${{ steps.releaseApk.outputs.apkfile }}
          draft: false
          prerelease: false
          make_latest: true
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
